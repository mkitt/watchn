
var exec = require('child_process').exec;
var tests = './test/';
var libs = './lib/';
var publics = './examples/';

/*
- Add reporters and tests for:
  - docco
  - stylus
  - scss
  - jade
  - haml
  - concat
  - jasmine
  - jasmine dom
  - coffeescript
- Cleanup .watchn file
- Handle notification status
  - Show time stamp (probably should come from the executable)
  - verbosity (look at npm - "silent", "info", "verbose", "silly")
    - silent: only fatal errors
    - info: reload, console logs,
    - verbose: info +, time stamp, summary of reload
    - silly: everything
- Test for growl executable
- See if we can opt out of passing options?
- Add the ability for user defined reporters
- Clean up any remaining todos
- Clean up the Makefile
- Revisit the CLI watchn file and see what needs to change?
- Update documentation
*/

function notify(msg, growl) {
  console.log(new Date() + ': ' + msg);
  if (growl) {
    exec('growlnotify -name '+  growl.name + ' -m "' + growl.msg + '"');
  }
}

module.exports.init = function(watchn) {

  watchn.watch('test', [tests, libs], function(options) {
    watchn.execute('make test', options, 'expresso', true, true)
  })

  watchn.watch('docs', [libs], function(options) {
    watchn.execute('make docs', options, 'reporter', false, true)
  })



  watchn.watch('styles', [publics + 'stylesheets/'], function(options) {
    if (options.curr > options.prev) {
      exec('make css', function(error, stdout, stderr) {

        if (error !== null)
          notify(error.message, {name: 'Stylus', msg: 'Build Failed!'});
        else
          notify('styles generated');

      });
    }
  });

  watchn.watch('markup', [publics + 'views/'], function(options) {
    if (options.curr > options.prev) {
      exec('make html', function(error, stdout, stderr) {
        if (error !== null)
          notify(error.message, {name: 'Jade', msg: 'Build Failed!'});
        else
          notify('markup generated');
      });
    }
  });

  watchn.watch('js', [publics + 'javascripts/src/'], function(options) {
    if (options.curr > options.prev) {
      exec('make js', function(error, stdout, stderr) {

        if (error !== null)
          notify(error.message, {name: 'JavaScript', msg: 'Build Failed!'});
        else
          notify('js generated');
      });
    }
  });

};

